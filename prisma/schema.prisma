// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  MENTOR
}

enum LearningStyle {
  VISUAL
  HANDS_ON
  THEORETICAL
  MIXED
}

enum TeachingExperience {
  NONE
  ONE_TO_THREE_YEARS
  THREE_TO_FIVE_YEARS
  FIVE_PLUS_YEARS
}

enum PreferredStudentLevel {
  GRADE_3_TO_5
  GRADE_6_TO_9
  GRADE_10_TO_11
  ADVANCED_LEVEL
}

model User {
  id        String   @id @default(cuid())
  fullName  String
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  studentProfile StudentProfile?
  mentorProfile  MentorProfile?

  @@map("users")
}

model StudentProfile {
  id                       String        @id @default(cuid())
  userId                   String        @unique
  user                     User          @relation(fields: [userId], references: [id])
  age                      Int
  contactNumber            String
  educationLevel           String
  school                   String
  currentYear              Int
  learningStyle            LearningStyle
  accommodations           String?
  languagePreference       String?
  learningGoals            String?
  preferredSessionDuration String?
  specialRequests          String?
  createdAt                DateTime      @default(now())
  updatedAt                DateTime      @updatedAt

  subjects StudentSubject[]
  sessions Session[]

  @@map("student_profiles")
}

model MentorProfile {
  id                 String             @id @default(cuid())
  userId             String             @unique
  user               User               @relation(fields: [userId], references: [id])
  age                Int
  contactNumber      String
  location           String
  profileBio         String
  professionalRole   String
  teachingExperience TeachingExperience
  linkedInProfileUrl String
  gitHubUrl          String?
  portfolioUrl       String?
  profilePicture     String?
  languagePreference String?
  yearsExperience    Int
  maxMentees         Int
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt

  expertise       MentorExpertise[]
  sessions        Session[]
  certifications  MentorCertification[]
  preferredLevels MentorPreferredLevel[]

  @@map("mentor_profiles")
}

model Session {
  id          String   @id @default(cuid())
  studentId   String
  mentorId    String
  date        DateTime
  time        DateTime
  duration    Int      @default(120) // Fixed duration in minutes
  bankSlipUrl String
  fileType    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  student StudentProfile @relation(fields: [studentId], references: [id])
  mentor  MentorProfile  @relation(fields: [mentorId], references: [id])

  @@map("sessions")
}

model StudentSubject {
  id        String @id @default(cuid())
  studentId String
  subject   String

  student StudentProfile @relation(fields: [studentId], references: [id])

  @@map("student_subjects")
}

model MentorExpertise {
  id       String @id @default(cuid())
  mentorId String
  subject  String

  mentor MentorProfile @relation(fields: [mentorId], references: [id])

  @@map("mentor_expertise")
}

model MentorCertification {
  id       String   @id @default(cuid())
  mentorId String
  title    String
  issuedBy String
  issuedAt DateTime

  mentor MentorProfile @relation(fields: [mentorId], references: [id])

  @@map("mentor_certifications")
}

model MentorPreferredLevel {
  id       String                @id @default(cuid())
  mentorId String
  level    PreferredStudentLevel

  mentor MentorProfile @relation(fields: [mentorId], references: [id])

  @@map("mentor_preferred_levels")
}
