"use client";
import React, { useEffect, useRef, useState } from "react";
import Image from "next/image";
import Button from "../components/Button";
import { motion, useAnimation } from "framer-motion";
import GetStartedModal from "@/components/get-started-modal";
import { Dialog, DialogContent } from "@/components/ui/dialog";

interface MentorProfile {
  id: string;
  initials: string;
  name: string;
  location: string;
  subjects: string[];
  description: string;
  duration: string;
  language: string;
  initialsColor: string;
}

interface FeatureCard {
  id: string;
  title: string;
  image: string;
  gradient: string;
  description?: string;
}

const EduVibePage: React.FC = () => {
  const [visibleCards, setVisibleCards] = useState<Set<string>>(new Set());
  const cardRefs = useRef<{ [key: string]: HTMLDivElement | null }>({});
  const [activeCardIndex, setActiveCardIndex] = useState(0);
  const carouselRef = useRef<HTMLDivElement>(null);
  const controls = useAnimation();
  const [isModalOpen, setIsModalOpen] = useState(false);

  const featureCards: FeatureCard[] = [
    {
      id: "1",
      title: "Personalized Learning",
      image: "/images/img_rectangle_102.png",
      gradient: "bg-gradient-to-t from-white via-white/0 to-white/0",
      description:
        "We tailor the mentorship experience to fit each student's unique goals, learning style, and pace making every session impactful.",
    },
    {
      id: "2",
      title: "Real Mentors, Real Guidance",
      image: "/images/img_rectangle_113.png",
      gradient: "bg-gradient-to-t from-white via-white/0 to-white/0",
      description:
        "Learn from industry professionals who provide practical knowledge and insights from their real-world experience.",
    },
    {
      id: "3",
      title: "Growth & Career Readiness",
      image: "/images/img_rectangle_124.png",
      gradient: "bg-gradient-to-t from-white via-white/0 to-white/0",
      description:
        "Develop skills that prepare you for future career opportunities with guidance tailored to industry demands.",
    },
    {
      id: "4",
      title: "Insights-Driven Support",
      image: "/images/img_rectangle_131.png",
      gradient: "bg-gradient-to-t from-white via-white/0 to-white/0",
      description:
        "Get personalized feedback and analytics to track your progress and identify areas for improvement.",
    },
  ];

  // Auto-scroll effect for carousel
  useEffect(() => {
    const advanceCarousel = () => {
      const cardWidthWithGap = 280 + 16; // card width + gap

      // Calculate the next index. If it goes past the original set,
      // reset to the corresponding position in the duplicated set.
      let nextIndex = activeCardIndex + 1;

      if (activeCardIndex >= featureCards.length - 1) {
        // If we've reached the last card of the original set,
        // we prepare to snap back to the start of the duplicated set (which looks like the original start).
        controls
          .start({
            x: 0, // Visually snap back to the beginning
            transition: { duration: 0 }, // Make the snap immediate
          })
          .then(() => {
            setActiveCardIndex(0); // Reset active index to the start of the original set
            controls.start({
              x: 0, // Ensure it's at the start for the next animation cycle
              transition: { duration: 0 }, // No animation for the snap
            });
          });
      } else {
        // Normal advance to next slide
        setActiveCardIndex(nextIndex);
        const scrollAmount = nextIndex * cardWidthWithGap;
        controls.start({
          x: -scrollAmount,
          transition: { type: "tween", ease: "easeInOut", duration: 0.8 },
        });
      }
    };

    const interval = setInterval(advanceCarousel, 3000);

    return () => clearInterval(interval);
  }, [activeCardIndex, controls, featureCards.length]);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const cardId = entry.target.getAttribute("data-card-id");
            if (cardId) {
              setVisibleCards((prev) => new Set([...prev, cardId]));
            }
          }
        });
      },
      {
        threshold: 0.1,
        rootMargin: "0px 0px -50px 0px",
      }
    );

    Object.values(cardRefs.current).forEach((ref) => {
      if (ref) observer.observe(ref);
    });

    return () => observer.disconnect();
  }, []);

  const mentorProfiles: MentorProfile[] = [
    {
      id: "1",
      initials: "RL",
      name: "Rahul Lavan",
      location: "Colombo",
      subjects: ["Science", "Physics", "Biology"],
      description:
        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled",
      duration: "30 mins â€“ 1 hour",
      language: "English, Tamil",
      initialsColor: "text-button-1",
    },
    {
      id: "2",
      initials: "CR",
      name: "Chathum Rahal",
      location: "Galle",
      subjects: ["Mathematics", "History", "English"],
      description:
        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled",
      duration: "1 hour",
      language: "English",
      initialsColor: "text-button-5",
    },
    {
      id: "3",
      initials: "MI",
      name: "Malsha Fernando",
      location: "Colombo",
      subjects: ["Chemistry", "Art", "Commerce"],
      description:
        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled",
      duration: "1 hour",
      language: "Sinhala",
      initialsColor: "text-button-4",
    },
  ];

  const handleDotClick = (index: number) => {
    setActiveCardIndex(index);
    if (carouselRef.current) {
      const scrollAmount = index * (280 + 16); // card width + gap
      controls.start({ x: -scrollAmount });
    }
  };

  const handleNext = () => {
    const nextIndex = (activeCardIndex + 1) % featureCards.length;
    setActiveCardIndex(nextIndex);
    if (carouselRef.current) {
      const scrollAmount = nextIndex * (280 + 16); // card width + gap
      controls.start({ x: -scrollAmount });
    }
  };

  const handlePrev = () => {
    const prevIndex =
      (activeCardIndex - 1 + featureCards.length) % featureCards.length;
    setActiveCardIndex(prevIndex);
    if (carouselRef.current) {
      const scrollAmount = prevIndex * (280 + 16); // card width + gap
      controls.start({ x: -scrollAmount });
    }
  };

  return (
    <>
      <div className="bg-global-3 min-h-screen">
        {/* Main Content */}
        <div className="relative overflow-hidden">
          {/* Background Decorative Element - Fixed positioning */}
          <div className="absolute left-0 top-0 w-full h-96 bg-global-1 rounded-full opacity-10 blur-3xl transform -translate-x-1/2 -translate-y-1/2"></div>

        <div className="relative z-10 px-4 sm:px-6 lg:px-14 max-w-7xl mx-auto">
          {/* Hero Section - Fixed layout */}
          <div className="flex flex-col lg:flex-row items-start gap-8 lg:gap-12 pt-8 lg:pt-12">
            {/* Left Content */}
            <div className="w-full lg:w-1/2 flex flex-col gap-8 lg:gap-12">
              <div className="flex flex-col gap-8 lg:gap-16">
                <div className="relative">
                  <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-medium leading-tight text-global-1">
                    Empowering Students with Personalized Mentorship
                  </h1>
                  {/* Book icon positioned properly */}
                  <div className="absolute -top-4 -right-4 hidden lg:block">
                    <Image
                      src="/images/img_book_open.svg"
                      alt="Book icon"
                      width={60}
                      height={60}
                      className="w-12 h-12 lg:w-16 lg:h-16"
                    />
                  </div>
                </div>
                <p className="text-lg sm:text-xl lg:text-2xl font-normal leading-relaxed text-global-1 max-w-lg">
                  EduVibe connects students with experienced mentors to guide
                  them through their academic journey
                </p>
              </div>
              <Button
                onClick={() => setIsModalOpen(true)}
                variant="primary"
                className="text-lg sm:text-xl lg:text-2xl font-medium text-button-3 bg-button-1 rounded-lg px-6 sm:px-8 lg:px-10 py-3 lg:py-4 w-fit hover:bg-button-2 transition-colors bg-black text-white">
                Get Started
              </Button>
            </div>

            {/* Right Content - Image Gallery - Fixed responsive layout */}
            <div className="w-full lg:w-1/2 flex justify-center">
              <div className="w-full max-w-lg overflow-hidden">
                <div className="flex gap-4 justify-center">
                  {/* First Column */}
                  <div className="flex flex-col gap-4 w-1/3">
                    <Image
                      src="/images/img_rectangle_62.png"
                      alt="Student 1"
                      width={120}
                      height={220}
                      className="w-full h-auto rounded-3xl object-cover"
                    />
                    <Image
                      src="/images/img_rectangle_64.png"
                      alt="Student 2"
                      width={120}
                      height={300}
                      className="w-full h-auto rounded-3xl object-cover"
                    />
                  </div>

                  {/* Second Column */}
                  <div className="flex flex-col gap-4 w-1/3 mt-8">
                    <Image
                      src="/images/img_rectangle_63.png"
                      alt="Student 3"
                      width={120}
                      height={180}
                      className="w-full h-auto rounded-3xl object-cover"
                    />
                    <Image
                      src="/images/img_rectangle_68.png"
                      alt="Student 4"
                      width={120}
                      height={320}
                      className="w-full h-auto rounded-3xl object-cover"
                    />
                  </div>

                  {/* Third Column */}
                  <div className="flex flex-col gap-4 w-1/3 mt-16">
                    <Image
                      src="/images/img_rectangle_66.png"
                      alt="Student 5"
                      width={120}
                      height={280}
                      className="w-full h-auto rounded-3xl object-cover"
                    />
                    <Image
                      src="/images/img_rectangle_67.png"
                      alt="Student 6"
                      width={120}
                      height={200}
                      className="w-full h-auto rounded-3xl object-cover"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* What's in it for Students Section - ENHANCED CAROUSEL */}
          <div className="mt-16 lg:mt-24 mb-16 lg:mb-24">
            <h2 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-medium leading-tight text-global-1 text-center mb-8 lg:mb-12">
              What's in it for Students?
            </h2>

            <div className="flex flex-col gap-8 lg:gap-12 items-center">
              <p className="text-lg sm:text-xl lg:text-2xl font-normal leading-relaxed text-global-1 text-center max-w-4xl mx-auto">
                EduVibe is a student-mentor platform designed to personalize
                learning journeys. It connects students with mentors who offer
                guidance, support, and practical industry insights.
              </p>

              {/* Enhanced Carousel Container */}
              <div className="w-full max-w-7xl mx-auto relative">
                {/* Carousel Content */}
                <div className="overflow-hidden px-12">
                  <motion.div
                    ref={carouselRef}
                    className="flex gap-6"
                    animate={controls}
                    transition={{
                      type: "tween",
                      ease: "easeInOut",
                      duration: 0.8,
                    }}>
                    {/* Display cards twice to create the infinite loop effect */}
                    {[...featureCards, ...featureCards].map((card, index) => (
                      <motion.div
                        key={`${card.id}-${index}`}
                        className="relative w-[280px] h-96 rounded-3xl overflow-hidden flex-shrink-0 shadow-xl"
                        initial={{ opacity: 0.8 }}
                        animate={{
                          opacity: 1,
                          scale:
                            activeCardIndex === index % featureCards.length
                              ? 1.05
                              : 0.95,
                          filter:
                            activeCardIndex === index % featureCards.length
                              ? "brightness(1.05)"
                              : "brightness(0.95)",
                          y:
                            activeCardIndex === index % featureCards.length
                              ? -10
                              : 0,
                        }}
                        transition={{
                          duration: 0.5,
                        }}
                        whileHover={{ scale: 1.05, y: -10 }}>
                        <Image
                          src={card.image}
                          alt={card.title}
                          fill
                          className="object-cover"
                          priority={
                            index % featureCards.length === activeCardIndex ||
                            index % featureCards.length ===
                              (activeCardIndex + 1) % featureCards.length
                          }
                        />
                        <div
                          className={`absolute bottom-0 left-0 right-0 h-2/3 ${card.gradient} rounded-b-3xl flex items-end p-6 
                  transition-all duration-300 ease-in-out ${
                    activeCardIndex === index % featureCards.length
                      ? "backdrop-blur-sm bg-gradient-to-t from-black/70 via-black/30 to-transparent"
                      : ""
                  }`}>
                          <div className="w-full">
                            <h3 className="text-xl lg:text-2xl font-medium leading-tight text-white mb-3">
                              {card.title}
                            </h3>
                            <p
                              className={`text-base lg:text-lg font-light leading-relaxed text-white/90
                      transition-all duration-500 ease-in-out
                      ${
                        activeCardIndex === index % featureCards.length
                          ? "opacity-100 max-h-40"
                          : "opacity-0 max-h-0 overflow-hidden"
                      }`}>
                              {card.description}
                            </p>
                          </div>
                        </div>
                      </motion.div>
                    ))}
                  </motion.div>
                </div>

                {/* Enhanced Dots Indicator */}
                <div className="flex justify-center gap-3 mt-8">
                  {featureCards.map((_, index) => (
                    <button
                      key={index}
                      onClick={() => handleDotClick(index)}
                      className={`transition-all duration-300 focus:outline-none`}
                      aria-label={`Go to slide ${index + 1}`}>
                      <div
                        className={`h-3 rounded-full transition-all duration-300 ${
                          activeCardIndex === index
                            ? "bg-button-1 w-10"
                            : "bg-gray-300 w-3"
                        }`}
                      />
                    </button>
                  ))}
                </div>
              </div>
            </div>
          </div>

          {/* Session Highlights Section */}
          <div className="mb-16 lg:mb-24 relative">
            {/* Background decorative image */}
            <div className="absolute inset-0 opacity-20">
              <Image
                src="/images/img_elipses_group.png"
                alt="Background decoration"
                fill
                className="object-contain"
              />
            </div>

            <div className="relative z-10 flex flex-col gap-8 lg:gap-12 items-center py-8">
              <div className="text-center max-w-4xl mx-auto">
                <h2 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-medium leading-tight text-global-1 mb-4">
                  Session Highlights â€“ Trending Now
                </h2>
                <p className="text-lg sm:text-xl lg:text-2xl font-normal leading-relaxed text-global-1">
                  Join the sessions students are raving about. These expert-led,
                  high-impact sessions are designed to help you unlock your full
                  potential whether you are polishing your resume, mapping out
                  your career path, or getting ready to ace technical
                  interviews.
                </p>
              </div>

              {/* Mentor Profiles - Fixed card layout */}
              <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 w-full max-w-6xl mx-auto">
                {mentorProfiles.map((mentor) => (
                  <div
                    key={mentor.id}
                    className="bg-white/90 backdrop-blur-sm rounded-3xl p-6 border border-gray-200 shadow-lg">
                    <div className="flex flex-col gap-6">
                      {/* Profile Header */}
                      <div className="flex gap-4 items-center">
                        <div
                          className={`${mentor.initialsColor} bg-global-3 rounded-xl w-16 h-16 flex items-center justify-center text-xl font-medium`}>
                          {mentor.initials}
                        </div>
                        <div className="flex-1">
                          <h3 className="text-xl font-medium text-global-1">
                            {mentor.name}
                          </h3>
                          <p className="text-sm text-global-2">
                            {mentor.location}
                          </p>
                        </div>
                      </div>

                      {/* Subject Tags */}
                      <div className="flex flex-wrap gap-2">
                        {mentor.subjects.map((subject, index) => (
                          <span
                            key={index}
                            className="bg-global-2 text-global-1 text-sm px-3 py-1 rounded-lg border">
                            {subject}
                          </span>
                        ))}
                      </div>

                      {/* Description */}
                      <p className="text-base leading-relaxed text-global-1 line-clamp-4">
                        {mentor.description}
                      </p>

                      {/* Details */}
                      <div className="space-y-2 text-sm">
                        <div className="flex justify-between">
                          <span className="font-medium text-global-1">
                            Duration:
                          </span>
                          <span className="text-global-1">
                            {mentor.duration}
                          </span>
                        </div>
                        <div className="flex justify-between">
                          <span className="font-medium text-global-1">
                            Language:
                          </span>
                          <span className="text-global-1">
                            {mentor.language}
                          </span>
                        </div>
                      </div>

                      {/* Action Buttons */}
                      <div className="flex gap-3 items-center pt-4">
                        <Button
                          variant="primary"
                          className="flex-1 text-base font-medium text-white bg-button-2 rounded-lg px-6 py-2 hover:bg-button-1 transition-colors">
                          Book a session
                        </Button>
                        <button className="p-2 rounded-lg border border-gray-300 hover:bg-gray-50 transition-colors">
                          <Image
                            src="/images/img_bookmark.svg"
                            alt="Bookmark"
                            width={24}
                            height={24}
                            className="w-6 h-6"
                          />
                        </button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>

              {/* Load More Button */}
              <Button
                variant="ghost"
                className="text-base font-medium text-button-2 border border-gray-600 rounded-lg px-6 py-3 hover:bg-gray-50 transition-colors">
                Load More Sessions
              </Button>
            </div>
          </div>
        </div>
      </div>
    </div>

    {/* GetStarted Modal */}
    <Dialog open={isModalOpen} onOpenChange={setIsModalOpen}>
      <DialogContent className="sm:max-w-2xl">
        <GetStartedModal onClose={() => setIsModalOpen(false)} />
      </DialogContent>
    </Dialog>
  );
};

export default EduVibePage;
